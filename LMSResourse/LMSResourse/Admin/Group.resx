<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAddGroup" xml:space="preserve">
    <value>Add group</value>
  </data>
  <data name="errDupGroup" xml:space="preserve">
    <value>Group name exist.</value>
  </data>
  <data name="fldGroupContactNo" xml:space="preserve">
    <value>Contact no.</value>
  </data>
  <data name="fldGroupEmailId" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="fldGroupHomePageContent" xml:space="preserve">
    <value>HTML content</value>
  </data>
  <data name="fldGroupHomepageGroupName" xml:space="preserve">
    <value>Group name</value>
  </data>
  <data name="fldGroupHomepageImgPosition" xml:space="preserve">
    <value>Image position</value>
  </data>
  <data name="fldGroupHomePageImgPositionOption1" xml:space="preserve">
    <value>Top</value>
  </data>
  <data name="fldGroupHomePageImgPositionOption2" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="fldGroupHomePageImgPositionOption3" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="fldGroupHomepageNote" xml:space="preserve">
    <value>Please note that all the couses with an  'In progress' or 'Not started'  status will be displayed below the HTML content in alphabetical order. Please click on Preview button to preview the homepage and sample listing of courses</value>
  </data>
  <data name="fldGroupHomepageOrgName" xml:space="preserve">
    <value>Organisation name</value>
  </data>
  <data name="fldGroupHomePageUploadImage" xml:space="preserve">
    <value>Upload image</value>
  </data>
  <data name="fldGroupManagerName" xml:space="preserve">
    <value>Head / Manager's name</value>
  </data>
  <data name="fldGroupName" xml:space="preserve">
    <value>Group name</value>
  </data>
  <data name="fldOrganisationID" xml:space="preserve">
    <value>Organisation name</value>
  </data>
  <data name="fldStatus" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="flsGroupDesc" xml:space="preserve">
    <value>Group description</value>
  </data>
  <data name="msgMxlGroupContactNo" xml:space="preserve">
    <value>Group contact no length cannot exceed 50 char.</value>
  </data>
  <data name="msgMxlGroupDesc" xml:space="preserve">
    <value>Group description length cannot exceed 400 char.</value>
  </data>
  <data name="msgMxlGroupEmailId" xml:space="preserve">
    <value>Group email address length cannot exceed 256 char.</value>
  </data>
  <data name="msgMxlGroupManager" xml:space="preserve">
    <value>Group head/manager name length cannot exceed 100 char.</value>
  </data>
  <data name="msgMxlGroupName" xml:space="preserve">
    <value>Group name length cannot exceed 100 char.</value>
  </data>
  <data name="msgReqGroupDesc" xml:space="preserve">
    <value>Please enter group description</value>
  </data>
  <data name="msgReqGroupHomePageContent" xml:space="preserve">
    <value>Please enter group home page content</value>
  </data>
  <data name="msgReqGroupHomePageImgPosition" xml:space="preserve">
    <value>Please select group home page image location</value>
  </data>
  <data name="msgReqGroupHomePageUploadImage" xml:space="preserve">
    <value>Please upload image file</value>
  </data>
  <data name="msgReqGroupName" xml:space="preserve">
    <value>Please enter group name</value>
  </data>
  <data name="msgValGroupHomePageUploadImage" xml:space="preserve">
    <value>Please upload a valid image file</value>
  </data>
  <data name="thContactNo" xml:space="preserve">
    <value>Contact no</value>
  </data>
  <data name="thEmailAddress" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="thGroup" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="thManager" xml:space="preserve">
    <value>Head / Manager's name</value>
  </data>
  <data name="thOrganisation" xml:space="preserve">
    <value>Organisation</value>
  </data>
  <data name="msgInvalidGroup" xml:space="preserve">
    <value>Invalid group.</value>
  </data>
  <data name="msgConfirmDelete" xml:space="preserve">
    <value>Are you sure you want to delete selected group?</value>
  </data>
  <data name="msgDeleteGroup" xml:space="preserve">
    <value>There are data associated with selected group. [{0}] can't be deleted.</value>
  </data>
  <data name="btnConfirmDelete" xml:space="preserve">
    <value>Delete group</value>
  </data>
  <data name="lblConfirmDeleteHeading" xml:space="preserve">
    <value>Delete group?</value>
  </data>
  <data name="btnH_pagePreview" xml:space="preserve">
    <value>and preview</value>
  </data>
  <data name="thStatus" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="lblExpDate" xml:space="preserve">
    <value>Expiry date</value>
  </data>
  <data name="lblMaxUsers" xml:space="preserve">
    <value>Max users</value>
  </data>
  <data name="msgErrorIntegerOnly" xml:space="preserve">
    <value>No. of users should be a integer number only</value>
  </data>
  <data name="msgMxlMaxUser" xml:space="preserve">
    <value>No. of users length cannot exceed 6 digit.</value>
  </data>
  <data name="msgErrorGreaterthan" xml:space="preserve">
    <value>No. of users can not be greater than </value>
  </data>
  <data name="msgReqMaxUser" xml:space="preserve">
    <value>Please enter no. of users</value>
  </data>
  <data name="lblAssigned" xml:space="preserve">
    <value>Course assignment basis</value>
  </data>
</root>