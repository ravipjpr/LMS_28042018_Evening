@using MvcCheckBoxList.Model
@using CLSLms
@using Microsoft.Owin.Security
@model LMS.Models.UserModel
@{
    ViewBag.Title = "CreateUser";

    var db = new LeopinkLMSDBEntities();
    var currentuser = db.UserProfiles.Find(Convert.ToInt64(Session["UserID"])); // user logs in
    var defaultRole = db.InstanceInfoes.Find(1).RoleName;
    var ProfileSetting = from profiles in db.UserProfileSettings.DefaultIfEmpty()
                         select profiles;
    var P_Settings = ProfileSetting.ToList();
    var Language = string.IsNullOrWhiteSpace(currentuser.ToString()) ?
       string.IsNullOrWhiteSpace(db.InstanceInfoes.Find(1).DefaultLanguage.ToString()) ? 2 : db.InstanceInfoes.Find(1).DefaultLanguage :
       db.Languages.Find(currentuser.LanguageId).ActiveForLearner == true ? db.Languages.Find(currentuser.LanguageId).LanguageID :
       string.IsNullOrWhiteSpace(db.InstanceInfoes.Find(1).DefaultLanguage.ToString()) ? 2 : db.InstanceInfoes.Find(1).DefaultLanguage;
    <link rel="stylesheet" href="~/Scripts/sol.css">
}
@using (Html.BeginForm("CreateUser", "UserManagement", FormMethod.Post, new { @id = "myForm" }))
{
    <div class="container-fluid">
        <nav aria-label="breadcrumb" role="navigation">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="~/Admin">@LMSResourse.Common.ApplicationMenu.lblHome</a></li>
                <li class="breadcrumb-item"><a href="~/UserManagement">@LMSResourse.Common.ApplicationMenu.lblUsers</a></li>
                <li class="breadcrumb-item active" aria-current="page">@LMSResourse.Common.ApplicationMenu.tooltipCreateUser</li>
            </ol>
        </nav>
        <div class="errormessage" role="alert" id="errorMessages">
            <div>@Html.ValidationMessageFor(model => model.FirstName)</div>
            <div>@Html.ValidationMessageFor(model => model.LastName)</div>
            <div>@Html.ValidationMessageFor(model => model.EmailAddress)</div>
            <div>@Html.ValidationMessageFor(model => model.OrganisationID)</div>
            <div>@Html.ValidationMessageFor(model => model.UserGroupList.PostedGroups.UserGroupsLocalIds)</div>
            <div>@Html.ValidationMessageFor(model => model.Option1)</div>
            <div>@Html.ValidationMessageFor(model => model.Option2)</div>
            <div id="servererrors"></div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.FirstName)* </div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @aria_describedby = "basic-addon2" })
                        <span class="input-group-addon" id="FirstName_feedback"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.LastName)*</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @aria_describedby = "basic-addon2" })
                        <span class="input-group-addon" id="LastName_feedback"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.EmailAddress)*</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control", @type = "email" })
                        <span class="input-group-addon" id="EmailAddress_feedback"></span>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.EmployeeID)</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.EmployeeID, new { @class = "form-control", @readonly = "true", @onfocus = "this.removeAttribute('readonly')", autocomplete = "off" })
                        <span class="input-group-addon" id="EmployeeID_feedback"></span>
                    </div>
                    <div>@Html.ValidationMessageFor(model => model.EmployeeID)</div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.OrganisationID)*</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.DropDownList("OrganisationID", (IEnumerable<SelectListItem>)ViewBag.OrgList, @LMSResourse.Common.Common.dropSelect, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.DistrictID)*</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.DropDownList("DistrictID", (IEnumerable<SelectListItem>)ViewBag.DistrictList, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.BlockID)*</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.DropDownList("BlockID", (IEnumerable<SelectListItem>)ViewBag.BlockList, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.SchoolID)*</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.DropDownList("SchoolID", (IEnumerable<SelectListItem>)ViewBag.SchoolList, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row" id="lastelement">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.UserRolesList)</div>
                <div class="col-md-4" id="userroles">
                    <div class="input-group" style="border: solid 1px #cccccc; padding: 5px 0 0 18px; height: 200px; overflow-y: scroll; overflow-x: hidden; ">
                        @Html.CheckBoxListFor(
                                model => model.UserRolesList.PostedRoles.UserRolesLocalIds,
                                model => model.UserRolesList.AvailableRoles,
                                model => model.RoleId,
                                model => model.RoleName,
                                model => Model.UserRolesList.SelectedRoles.Select(a => a.RoleName).Contains(model.RoleName),
                                new HtmlListInfo(HtmlTag.vertical_columns, 1, new { @style = "padding-left:0px;" })
                                )
                    </div>
                    <div>@Html.ValidationMessageFor(model => model.UserRolesList)</div>
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.UserGroupList)</div>
                <div class="col-md-4" id="groups">
                    <div id="groupcheckboxes" class="form_textbox set_width1" style="border: solid 1px #cccccc; padding: 5px 0 0 18px; height: 200px; overflow-y: scroll; overflow-x: hidden; ">
                        @Html.CheckBoxListFor(
                                model => model.UserGroupList.PostedGroups.UserGroupsLocalIds,
                                model => model.UserGroupList.AvailableGroups,
                                model => model.GroupId,
                                model => model.GroupName,
                                model => Model.UserGroupList.SelectedGroups.Select(a => a.GroupName).Contains(model.GroupName),
                                new HtmlListInfo(HtmlTag.table, 1, new { @class = "required", @style = "width:100%; padding-left:10px;", @id = "groupListCheckBox" })
                                )
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group dvparent">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.UserIDs)</div>
                <div class="col-md-4">
                    <div class="input-group">
                        <select id="userListCheckBox" name="character" multiple="multiple" style="width: 325px;"></select>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.Password)</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @type = "password" })
                        <span class="input-group-addon" id="Password_feedback"></span>
                    </div>
                    <div>@Html.ValidationMessageFor(model => model.Password)</div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.ContactNo)</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control" })
                        <span class="input-group-addon" id="ContactNo_feedback"></span>
                    </div>
                    <div>@Html.ValidationMessageFor(model => model.ContactNo)</div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.Designation)</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" })
                        <span class="input-group-addon" id="Designation_feedback"></span>
                    </div>
                    <div>@Html.ValidationMessageFor(model => model.Designation)</div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.ManagerName)</div>
                <div class="col-md-4">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.ManagerName, new { @class = "form-control" })
                        <span class="input-group-addon" id="ManagerName_feedback"></span>
                    </div>
                    <div>@Html.ValidationMessageFor(model => model.ManagerName)</div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-2"></div>
                <div class="col-md-2">@Html.LabelFor(model => model.Status)</div>
                <div class="col-md-4">
                    <div class="col-md-6" style="padding-top: 2px;">
                        @Html.CheckBoxFor(model => model.Status)
                    </div>
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.ActionType)
        <div class="form-group">
            <div class="form-row">
                <div class="col-md-4"></div>
                <div class="col-md-6">
                    <button type="submit" class="btn btn-primary" id="create">@LMSResourse.Admin.User.btnAddUser</button>&nbsp;
                    <input type="button" class="btn btn-secondary" value="@LMSResourse.Common.Common.btnCancel" onclick="window.location.href='@Url.Action("index", "UserManagement")';" />
                </div>
                <div class="col-md-6">
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.UserIDs)
}
@section Scripts {
    <script src="~/Scripts/sol.js"></script>
    <script src="~/Scripts/commonfunction.js"></script>
    <script src="@Url.Content("~/Scripts/common-functions-util.js")"></script>
    <script type="text/javascript">
        function IsGroupChecked() {
            // check the values selected and return an outcome
            if (($("#OrganisationID :selected").text() != '@LMSResourse.Common.Common.dropSelect')) {
                var checkedCount = $('#groupListCheckBox').find('input:checked').length;
                var valid = checkedCount > 0;
                if (!valid) {
                    $('#servererrors').html('@LMSResourse.Admin.User.msgReqUserGroup');
                    //$('#servererrors').addClass('tooltip');
                }
                else {
                    $('#servererrors').html('');
                    //$('#servererrors').removeClass('tooltip');
                }
                return valid;
            }
            return true;
        }

        function validate(e) {
            e.preventDefault();
            // now trigger the form validation, result is 1 or 0
            var result = $('form').valid();
            if (result == false) {
            }
            else {
                if (IsGroupChecked() == true)
                    $('form')[0].submit();
                else
                    return false;
            }
        }

        //$("#create").click(function (e) {
        //    return IsGroupChecked();
        //});

        $("#create_n_addanother").click(function (e) {
            $("#ActionType").val("2");
            if (($("#myForm").valid())) {
                if (IsGroupChecked())
                    $('#myForm').trigger('submit');
            }
            $('#myForm').trigger('submit');
        });
        var courseTypeVal = "1";
        $(document).ready(function () {
            fieldLength($("#EmployeeID"), $("#EmployeeID_feedback"));
            fieldLength($("#FirstName"), $("#FirstName_feedback"));
            fieldLength($("#LastName"), $("#LastName_feedback"));
            fieldLength($("#EmailAddress"), $("#EmailAddress_feedback"));
            fieldLength($("#Password"), $("#Password_feedback"));
            fieldLength($("#ContactNo"), $("#ContactNo_feedback"));
            fieldLength($("#ManagerName"), $("#ManagerName_feedback"));
            fieldLength($("#Designation"), $("#Designation_feedback"));
            $("#FirstName").focus();
            $("#mainmenu li").removeClass("active");
            $("#mainmenu li:eq(1)").addClass("active");

            //$('#OrganisationID option').each(function () {
            //    var myStr = $(this).text();
            //    $(this).attr("title", $(this).text());
            //    $(this).tooltip(true);
            //    if (myStr.length > 40) { $(this).text(myStr.substring(0, 40) + "...") }
            //});

            //alert($("#OrganisationID").val());
            //if ($("#OrganisationID").val() != 0) {
            //    $("#groups").show();
            //    $('#groups').find('input:checkbox').removeAttr('checked');
            //}

            $('#groupcheckboxes').find('input[type=checkbox]').each(function (e) {
                $(this).attr("style", "margin-right: 10px; margin-top: 6px;");
            });
            $('#groupcheckboxes').find('label').each(function (e) {
                $(this).attr("style", "width: 88%;");
            });

            $('#userroles').find('input[type=checkbox]').each(function (e) {
                $(this).attr("style", "margin-right: 10px; margin-top: 6px;");
            });

            $('#groups').find('input[type=checkbox]').each(function (e) {
                $(this).change(function () {
                    var checkedCount = $('#groups').find('input:checked').length;
                    var valid = checkedCount > 0;
                    if (!valid) {
                        $('#servererrors').html('@LMSResourse.Admin.User.msgReqUserGroup');
                        //$('#servererrors').addClass('tooltip');
                    }
                    else {
                        $('#servererrors').html('');
                        //$('#servererrors').removeClass('tooltip');
                    }
                });
            });

            var checkboid = $("input[type='checkbox'][value=" + '@Model.UserRolesList.AvailableRoles.Where(x => x.RoleName == defaultRole).Single().RoleId.ToString()' + "]").attr("id");
            $("#" + checkboid).attr("disabled", true);

            //$('#Password').keyup(function (e) {
            //    //var message = ValidateStrongPassword($('#Password').val());
            //    //if (message.length > 0) {
            //    //    showPasswordSecurityPopup(e, message);//document.getElementById('textarea_feedback').style.display = 'inline';
            //    //}
            //});
            //$('#Password').bind('blur', function () {
            //    //$("#w_oPSPopup").hide();
            //    //$("#servererrors").hide();
            //});

            if ($("#OrganisationID").val() != "" && $("#OrganisationID").val() != "0" && $("#OrganisationID").val() != null) {
                var currentOrganisation = $("#OrganisationID").val();
                $("#OrganisationID").attr("title", $("#OrganisationID option:selected").attr("title"));
                $("#groups").show();

                $('#groups').find('input:checkbox').removeAttr('checked'); // reset all the checkbox for groups
                // remove all the dyanmic controls from the form

                $('#groups').find('input:checkbox').each(function () {
                    var group_org_value = this.value.toString();

                    //if ((group_org_value + "").split("~")[1] == currentOrganisation || (group_org_value + "").split("~")[1] == '') {
                    // No need of condition of (group_org_value + "").split("~")[1]  as only those group will list which have any organisation.
                    if ((group_org_value + "").split("~")[1] == currentOrganisation) {
                        if ((group_org_value + "").split("~")[1] == currentOrganisation) { $(this).prop('checked', true); }
                        $(this).closest('td').show();
                    }
                    else {
                        $(this).closest('td').hide();
                    }
                });
                var param = {
                    OrgId: currentOrganisation,
                    LangaugeId: "@currentuser.LanguageId"
                };
                var x = [];
                $.ajax({

                    url: "../UserManagement/GetUserProfiles",
                    contentType: "application/x-www-form-urlencoded",
                    type: "GET",
                    datatype: "json",
                    async: false,
                    data: param,
                    error: function (xmlHttpRequest, errorText, thrownError) {
                        //alert(xmlHttpRequest + "|" + errorText + "|" + thrownError);
                        return false;
                    },
                    success: function (data) {
                        if (data != null) {
                            // window.location.reload();
                            //alert(data);
                        }
                    },
                    complete: function (data) {
                        x = JSON.parse(data.responseText);

                        $(document).find("[data-dyc='" + 1 + "']").remove();
                        $("#Option1-error").html("");
                        $("#Option2-error").html("");

                        for (var i = 0; i < x.length; i++) {
                            if (x[i].IsDisplay == true) {
                                var Objadd = "";
                                if (x[i].ProfileType == 1) {
                                    if (x[i].IsMandatory == true) {
                                        Objadd = '<div class="row top_margin15"  data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                            '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label></div>' +
                                        '<div class="col-md-6">' +
                                        '<input class="form_textbox" size = "40" data-val="true" required data-val-length-max="' + x[i].MaxLength + '" title="' + x[i].ReqValidationMessage_For_Text + '" data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" type="text" value="" ></input>' +
                                        '<div id="Option' + x[i].profileSettingId + '_feedback"></div><div class="mandatory_mark">*</div></div></div>';
                                        $("#lastelement").before(Objadd);
                                        fieldLength($("#Option" + x[i].profileSettingId), $("#Option" + x[i].profileSettingId + "_feedback"));
                                    }
                                    else {
                                        Objadd = Objadd = '<div class="row top_margin15"  data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                            '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label></div>' +
                                        '<div class="col-md-6">' +
                                        '<input class="form_textbox" size = "40" data-val="true" data-val-length-max="' + x[i].MaxLength + '" title="' + x[i].ReqValidationMessage_For_Text + '" data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" type="text" value="" ></input>' +
                                        '<div id="Option' + x[i].profileSettingId + '_feedback"></div><div class="mandatory_mark"></div></div></div>';
                                        $("#lastelement").before(Objadd);
                                        fieldLength($("#Option" + x[i].profileSettingId), $("#Option" + x[i].profileSettingId + "_feedback"));

                                    }
                                }
                                else if (x[i].ProfileType == 2) {
                                    if (x[i].IsMandatory == true) {

                                        Objadd = '<div class="row top_margin15" data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                            '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label>' +
                                            '</div><div class="col-md-6">' +
                                            '<select class="form_textbox form_selectlist" data-val="true" data-val-number="The field Organisation must be a number." data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" aria-required="true" aria-invalid="false" title="' + x[i].ReqValidationMessage_For_Dropdown + '">' +
                                            '<option value="">-- Select --</option>';
                                        for (var y = 0; y < x[i].DropdownValues.length; y++) {
                                            Objadd = Objadd + '<option value="' + x[i].DropdownValues[y].ValueId + '">' + x[i].DropdownValues[y].ValueText + '</option>';
                                        }
                                        Objadd = Objadd + '</select>' +
                                            '<div class="mandatory_mark">*</div></div></div>';

                                        $("#lastelement").before(Objadd);

                                    }
                                    else {
                                        Objadd = '<div class="row top_margin15" data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                            '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label>' +
                                            '</div><div class="col-md-6">' +
                                            '<select class="form_textbox form_selectlist" data-val="true" data-val-number="The field Organisation must be a number." data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" aria-required="true" aria-invalid="false" title="' + x[i].ReqValidationMessage_For_Dropdown + '">' +
                                            '<option value="">-- Select --</option>';
                                        for (var y = 0; y < x[i].DropdownValues.length; y++) {
                                            Objadd = Objadd + '<option value="' + x[i].DropdownValues[y].ValueId + '">' + x[i].DropdownValues[y].ValueText + '</option>';
                                        }
                                        Objadd = Objadd + '</select>' +
                                            '<div class="mandatory_mark"></div></div></div>';

                                        $("#lastelement").before(Objadd);
                                    }
                                }
                            }
                            $(document).find("[data-dyc='" + 1 + "']").addClass("form-group row")
                        }

                    }
                });
            }

            $("#OrganisationID").change(function (e) {
                $(this).attr("title", $("#OrganisationID option:selected").attr("title"));// data_text

                var currentOrganisation = this.value;
                if (currentOrganisation != "") {
                    $("#groups").show();

                    $('#groups').find('input:checkbox').removeAttr('checked'); // reset all the checkbox for groups
                    // remove all the dyanmic controls from the form

                    $('#groups').find('input:checkbox').each(function () {
                        var group_org_value = this.value.toString();

                        //if ((group_org_value + "").split("~")[1] == currentOrganisation || (group_org_value + "").split("~")[1] == '') {
                        // No need of condition of (group_org_value + "").split("~")[1]  as only those group will list which have any organisation.
                        if ((group_org_value + "").split("~")[1] == currentOrganisation) {
                            if ((group_org_value + "").split("~")[1] == currentOrganisation) { $(this).prop('checked', true); }
                            $(this).closest('td').show();
                        }
                        else {
                            $(this).closest('td').hide();
                        }
                    });
                    var param = {
                        OrgId: currentOrganisation,
                        LangaugeId: "@currentuser.LanguageId"
                    };
                    var x = [];
                    $.ajax({

                        url: "../UserManagement/GetUserProfiles",
                        contentType: "application/x-www-form-urlencoded",
                        type: "GET",
                        datatype: "json",
                        async: false,
                        data: param,
                        error: function (xmlHttpRequest, errorText, thrownError) {
                            //alert(xmlHttpRequest + "|" + errorText + "|" + thrownError);
                            return false;
                        },
                        success: function (data) {
                            if (data != null) {
                                // window.location.reload();
                                //alert(data);
                            }
                        },
                        complete: function (data) {
                            x = JSON.parse(data.responseText);

                            $(document).find("[data-dyc='" + 1 + "']").remove();
                            $("#Option1-error").html("");
                            $("#Option2-error").html("");

                            for (var i = 0; i < x.length; i++) {
                                if (x[i].IsDisplay == true) {
                                    var Objadd = "";
                                    if (x[i].ProfileType == 1) {
                                        if (x[i].IsMandatory == true) {
                                            Objadd = '<div class="row top_margin15"  data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                                '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label></div>' +
                                            '<div class="col-md-6">' +
                                            '<input class="form_textbox" size = "40" data-val="true" required data-val-length-max="' + x[i].MaxLength + '" title="' + x[i].ReqValidationMessage_For_Text + '" data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" type="text" value="" ></input>' +
                                            '<div id="Option' + x[i].profileSettingId + '_feedback"></div><div class="mandatory_mark">*</div></div></div>';
                                            $("#lastelement").before(Objadd);
                                            fieldLength($("#Option" + x[i].profileSettingId), $("#Option" + x[i].profileSettingId + "_feedback"));
                                        }
                                        else {
                                            Objadd = Objadd = '<div class="row top_margin15"  data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                                '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label></div>' +
                                            '<div class="col-md-6">' +
                                            '<input class="form_textbox" size = "40" data-val="true" data-val-length-max="' + x[i].MaxLength + '" title="' + x[i].ReqValidationMessage_For_Text + '" data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" type="text" value="" ></input>' +
                                            '<div id="Option' + x[i].profileSettingId + '_feedback"></div><div class="mandatory_mark"></div></div></div>';
                                            $("#lastelement").before(Objadd);
                                            fieldLength($("#Option" + x[i].profileSettingId), $("#Option" + x[i].profileSettingId + "_feedback"));

                                        }
                                    }
                                    else if (x[i].ProfileType == 2) {
                                        if (x[i].IsMandatory == true) {

                                            Objadd = '<div class="row top_margin15" data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                                '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label>' +
                                                '</div><div class="col-md-6">' +
                                                '<select class="form_textbox form_selectlist" data-val="true" data-val-number="The field Organisation must be a number." data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" aria-required="true" aria-invalid="false" title="' + x[i].ReqValidationMessage_For_Dropdown + '">' +
                                                '<option value="">-- Select --</option>';
                                            for (var y = 0; y < x[i].DropdownValues.length; y++) {
                                                Objadd = Objadd + '<option value="' + x[i].DropdownValues[y].ValueId + '">' + x[i].DropdownValues[y].ValueText + '</option>';
                                            }
                                            Objadd = Objadd + '</select>' +
                                                '<div class="mandatory_mark">*</div></div></div>';

                                            $("#lastelement").before(Objadd);

                                        }
                                        else {
                                            Objadd = '<div class="row top_margin15" data-dyc="1"><div class="col-md-1">&nbsp;</div><div class="col-md-2">' +
                                                '<label for="Option' + x[i].profileSettingId + '">' + x[i].ProfileTitle + '</label>' +
                                                '</div><div class="col-md-6">' +
                                                '<select class="form_textbox form_selectlist" data-val="true" data-val-number="The field Organisation must be a number." data-val-required="' + x[i].ReqValidationMessage_For_Text + '" id="Option' + x[i].profileSettingId + '" name="Option' + x[i].profileSettingId + '" aria-required="true" aria-invalid="false" title="' + x[i].ReqValidationMessage_For_Dropdown + '">' +
                                                '<option value="">-- Select --</option>';
                                            for (var y = 0; y < x[i].DropdownValues.length; y++) {
                                                Objadd = Objadd + '<option value="' + x[i].DropdownValues[y].ValueId + '">' + x[i].DropdownValues[y].ValueText + '</option>';
                                            }
                                            Objadd = Objadd + '</select>' +
                                                '<div class="mandatory_mark"></div></div></div>';

                                            $("#lastelement").before(Objadd);
                                        }
                                    }
                                }
                                $(document).find("[data-dyc='" + 1 + "']").addClass("form-group row")
                            }
                        }
                    });

                    $('#groupListCheckBox').find('input[type="checkbox"]').each(function () {
                        $(this).prop('checked', false);
                        $(this).removeAttr("disabled");
                    });
                }
                else {
                    $("#groups").hide();
                }

            });

            //
            $(".dvparent").hide();
            var groupIds = "";
            $('#groupListCheckBox').find('input[type="checkbox"]').each(function () {
                $(this).click(function () {
                    if (courseTypeVal == 2) {
                        groupIds = "";

                        $('#groupListCheckBox').find('input[type="checkbox"]:checked').each(function () {
                            groupIds = (groupIds == "" ? $(this).attr("value").split("~")[0] : groupIds + "," + $(this).attr("value").split("~")[0]);
                        });
                        fillUsers(groupIds, "", $("#SchoolID").val());
                    }
                });
            });

            fillBlocks($("#DistrictID").val(), 0, 0);

            $("#DistrictID").change(function () {
                fillBlocks($(this).val(), 0, 0, "");
            });

            $("#BlockID").change(function () {
                fillSchools($(this).val(), 0, "");
            });

            $("#SchoolID").change(function () {
                fillUsersCheckbox("", $(this).val());
            });

            $("#create").click(function (e) {
                var isCheck = false;

                if (!$('#myForm').valid() || IsGroupChecked() == false) {
                    return false;
                }

                if (courseTypeVal == "2") {
                    $('.sol-selection').find('input[type=checkbox]:checked').each(function (e) {
                        isCheck = true;
                    });

                    if (isCheck == false) {
                        $('#servererrors').html('@LMSResourse.Admin.ProfileSettings.msgSelectUserName');
                        return false;
                    }
                }

                var userIds = "";
                $('.sol-selection').find('input[type="checkbox"]:checked').each(function () {
                    userIds = (userIds == "" ? $(this).attr("value") : userIds + "," + $(this).attr("value"));
                });

                $("#UserIDs").val(userIds);
            });
        });

        //Manage Role seletion on checkbox check event
        $('#userroles').find('input[type="checkbox"]').each(function () {
            $(this).click(function () {
                //fillBlocks($("#DistrictID").val(), 0, 0, "");
                $('#groupListCheckBox').find('input[type="checkbox"]').each(function () {
                    $(this).prop('checked', false);
                    $(this).removeAttr("disabled");
                });
                if ($(this).next().text() == "Parent" || $(this).next().text() == "Teacher") {
                    var $checkbox = $(this);
                    var isChecked = $checkbox.is(':checked')
                    var checkboid = $("input[type='checkbox'][value=" + '@Model.UserRolesList.AvailableRoles.Where(x => x.RoleName == defaultRole).Single().RoleId.ToString()' + "]").attr("id");
                    //If no option is checked, the make all the options available to be selected
                    //Otherwise, one option must be checked so lock out all other options

                    if (isChecked) {
                        $checkbox.siblings(":checkbox").attr("disabled", "disabled");
                        $checkbox.siblings(":checkbox").prop("checked", false);
                        if ($(this).next().text() == "Parent") {
                            fillUsers(0, "", 0);
                            courseTypeVal = 2;
                            $(".dvparent").show();
                        }
                    }
                    else {
                        $checkbox.siblings(":checkbox").removeAttr("disabled");
                        $("#" + checkboid).prop("checked", true);
                        $("#" + checkboid).attr("disabled", true);
                        $(".dvparent").hide();
                        courseTypeVal = 1;
                    }

                    $('#groupListCheckBox').find('input[type="checkbox"]').each(function () {
                        if ($(this).attr("value").split("~")[0] == 1 && isChecked) {
                            $(this).attr("disabled", "disabled");
                            $(this).prop("checked", false);
                        }
                        else if ($(this).attr("value").split("~")[0] == 1) {
                            $(this).prop('checked', false);
                            $(this).removeAttr("disabled");
                        }
                    });
                }
                else if ($(this).next().text() == "Administrator") {
                    if ($(this).is(':checked')) {
                        $(this).siblings(":checkbox").each(function () {
                            if ($(this).next().text() == "Group Admin")
                                $(this).attr("disabled", true);
                        });
                    }
                    else {
                        $(this).siblings(":checkbox").each(function () {
                            if ($(this).next().text() == "Group Admin")
                                $(this).attr("disabled", false);
                        });
                    }
                }
                else if ($(this).next().text() == "Group Admin") {
                    if ($(this).is(':checked')) {
                        $(this).siblings(":checkbox").each(function () {
                            if ($(this).next().text() == "Administrator")
                                $(this).attr("disabled", true);
                        });
                    }
                    else {
                        $(this).siblings(":checkbox").each(function () {
                            if ($(this).next().text() == "Administrator")
                                $(this).attr("disabled", false);
                        });
                    }
                }
            });
        });
    </script>
}
